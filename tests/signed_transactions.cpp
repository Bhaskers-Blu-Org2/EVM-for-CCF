// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

#include "ethereum_transaction.h"

#include <doctest/doctest.h>

using namespace evm4ccf;

nlohmann::json sample_txs[] = {
  R"xxx(
    {
      "nonce": 0,
      "call": {
        "from": "0x0123",
        "data": "0x00"
      }
    }
  )xxx"_json,
  R"xxx(
    {
      "nonce": 1,
      "call": {
        "from": "0x0123",
        "gasPrice": "0x1",
        "gas": "0x22",
        "to": "0x333",
        "value": "0x4444",
        "data": "0x55555"
      }
    }
  )xxx"_json,
  R"xxx(
    {
      "nonce": 2,
      "call": {
        "from": "0x4af4dcE351A4747B5b33Fcf66202612736401f95",
        "to": null,
        "data": "0x608060405234801561001057600080fd5b5060405160208061040783398101604090815290516000818155338152600160205291909120556103c1806100466000396000f3006080604052600436106100775763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663095ea7b3811461007c57806318160ddd146100b457806323b872dd146100db57806370a0823114610105578063a9059cbb14610126578063dd62ed3e1461014a575b600080fd5b34801561008857600080fd5b506100a0600160a060020a0360043516602435610171565b604080519115158252519081900360200190f35b3480156100c057600080fd5b506100c96101d8565b60408051918252519081900360200190f35b3480156100e757600080fd5b506100a0600160a060020a03600435811690602435166044356101de565b34801561011157600080fd5b506100c9600160a060020a03600435166102c4565b34801561013257600080fd5b506100a0600160a060020a03600435166024356102df565b34801561015657600080fd5b506100c9600160a060020a036004358116906024351661036a565b336000818152600260209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a35060015b92915050565b60005490565b600160a060020a03831660009081526001602052604081205482118015906102295750600160a060020a03841660009081526002602090815260408083203384529091529020548211155b156102b957600160a060020a038085166000818152600160209081526040808320805488900390559387168083528483208054880190559282526002815283822033808452908252918490208054879003905583518681529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35060016102bd565b5060005b9392505050565b600160a060020a031660009081526001602052604090205490565b3360009081526001602052604081205482116103625733600081815260016020908152604080832080548790039055600160a060020a03871680845292819020805487019055805186815290519293927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060016101d2565b5060006101d2565b600160a060020a039182166000908152600260209081526040808320939094168252919091522054905600a165627a7a72305820d42f54ea7a0e7e46d0c27f34e6f541ecdbf2c5fba2a8e541da4d28212b0a232400290000000000000000000000000000000000000000000000000000000000002710",
        "value": "0x0",
        "gas": "0x0",
        "gasPrice": "0x0"
      }
    }
  )xxx"_json,
  R"xxx(
    {
      "nonce": 3,
      "call": {
        "to": "0xab2fcCB0c5F0499278801CE41F4bcCCA39676f2D",
        "gas": "0x0",
        "gasPrice": "0x0",
        "value": "0x0",
        "data": "0xa9059cbb000000000000000000000000d2e1d33d92935599575089ef13c52492f242f51600000000000000000000000000000000000000000000000000000000000007d0",
        "from": "0x4af4dcE351A4747B5b33Fcf66202612736401f95"
      }
    }
  )xxx"_json,
  R"xxx(
    {
      "nonce": 0,
      "call": {
        "from": "0x0",
        "to": "0x687422eEA2cB73B5d3e242bA5456b782919AFc85",
        "data": "0xc0de",
        "gas": "0x186A0",
        "gasPrice": "0x4A817C800",
        "value": "0x3E8"
      }
    }
  )xxx"_json};

EthereumTransaction get_from_json(const nlohmann::json& j)
{
  size_t nonce = j["nonce"];
  auto call = j["call"].get<rpcparams::MessageCall>();
  return EthereumTransaction(nonce, call);
}

TEST_CASE("Transaction roundtrip" * doctest::test_suite("signed transactions"))
{
  current_chain_id = ChainIDs::pre_eip_155;

  auto kp = tls::KeyPair_k1Bitcoin(MBEDTLS_ECP_DP_SECP256K1);
  auto from = get_address_from_public_key_asn1(kp.public_key_asn1());

  for (const auto& j : sample_txs)
  {
    // Parse transaction
    const auto tx = get_from_json(j);

    // Encode and decode, check result is identical
    const auto encoded = tx.encode();
    {
      const auto decoded = EthereumTransaction(encoded);
      CHECK(tx.nonce == decoded.nonce);
      CHECK(tx.gas_price == decoded.gas_price);
      CHECK(tx.gas == decoded.gas);
      CHECK(tx.to == decoded.to);
      CHECK(tx.value == decoded.value);
      CHECK(tx.data == decoded.data);
    }

    // Sign transaction
    const auto with_signature = sign_transaction(kp, tx);

    // Encode and decode signed transaction, check result is identical and
    // matches original tx
    const auto encoded_with_signature = with_signature.encode();
    {
      const auto decoded =
        EthereumTransactionWithSignature(encoded_with_signature);
      CHECK(with_signature.nonce == tx.nonce);
      CHECK(with_signature.nonce == decoded.nonce);
      CHECK(with_signature.gas_price == tx.gas_price);
      CHECK(with_signature.gas_price == decoded.gas_price);
      CHECK(with_signature.gas == tx.gas);
      CHECK(with_signature.gas == decoded.gas);
      CHECK(with_signature.to == tx.to);
      CHECK(with_signature.to == decoded.to);
      CHECK(with_signature.value == tx.value);
      CHECK(with_signature.value == decoded.value);
      CHECK(with_signature.data == tx.data);
      CHECK(with_signature.data == decoded.data);

      CHECK(with_signature.v == decoded.v);
      CHECK(with_signature.r == decoded.r);
      CHECK(with_signature.s == decoded.s);
    }

    // Check recovered address matches signing address
    tls::RecoverableSignature rec_sig;
    with_signature.to_recoverable_signature(rec_sig);
    const auto hashed = eevm::keccak_256(encoded);
    auto recovered_key = tls::PublicKey_k1Bitcoin::recover_key(
      rec_sig, {hashed.data(), hashed.size()});
    const auto recovered_from =
      get_address_from_public_key_asn1(kp.public_key_asn1());
  }
}

TEST_CASE("Sample txs" * doctest::test_suite("signed transactions"))
{
  {
    INFO("Test example, short r");
    current_chain_id = ChainIDs::pre_eip_155;
    const eevm::rlp::ByteString raw_tx = eevm::to_bytes(
      "0xf8a1808080941a0895d3cc5daa975ba3a76cae6587d5584ccef780b844a9059cbb0000"
      "00000000000000000000d974b2bfaa1c67689e2a1759e3305a79156939b9000000000000"
      "0000000000000000000000000000000000000000000000000a6a1b9fd8be21ae92a7cc2d"
      "ea5a9c79e341b4d3fdc3e8b920da94424a95c7d52ef23ca041e539d0ca2193e48ea9cbbe"
      "66d4643c3ee25bb66e6aa2420b50ef9689eeb97a");

    const auto decoded = EthereumTransactionWithSignature(raw_tx);

    rpcparams::MessageCall tc;
    decoded.to_transaction_call(tc);

    CHECK(decoded.nonce == 0);
    CHECK(tc.gas_price == 0);
    CHECK(tc.gas == 0);
    CHECK(
      eevm::to_lower_hex_string(tc.from) ==
      "0xfeeb85ec81704a956ac61e1a7f259bb6087aa6b6");
    CHECK(
      eevm::to_lower_hex_string(*tc.to) ==
      "0x1a0895d3cc5daa975ba3a76cae6587d5584ccef7");
    CHECK(tc.value == 0);
    CHECK(
      tc.data ==
      "0xa9059cbb000000000000000000000000d974b2bfaa1c67689e2a1759e3305a79156939"
      "b90000000000000000000000000000000000000000000000000000000000000a6a");

    const auto encoded = decoded.encode();
    const auto hash = eevm::keccak_256(encoded);
    CHECK(
      eevm::to_lower_hex_string(hash) ==
      "0x937aa161c762cda253f269ef0156d1addb23e4a04a6bbddee0a3c18cd79a9fff");
  }

  {
    INFO("First mainnet transaction");
    current_chain_id = ChainIDs::ethereum_mainnet;
    const eevm::rlp::ByteString raw_tx = eevm::to_bytes(
      "0xf86780862d79883d2000825208945df9b87991262f6ba471f09758cde1c0fc1de73482"
      "7a69801ca088ff6cf0fefd94db46111149ae4bfc179e9b94721fffd821d38d16464b3f71"
      "d0a045e0aff800961cfce805daef7016b9b675c137a6a41a548f7b60a3484c06a33a");

    const auto decoded = EthereumTransactionWithSignature(raw_tx);

    rpcparams::MessageCall tc;
    decoded.to_transaction_call(tc);

    CHECK(decoded.nonce == 0);
    CHECK(tc.gas_price == 50'000 * std::giga::num); // 50,000 GWei
    CHECK(tc.gas == 21'000);
    CHECK(
      eevm::to_lower_hex_string(tc.from) ==
      "0xa1e4380a3b1f749673e270229993ee55f35663b4");
    CHECK(
      eevm::to_lower_hex_string(*tc.to) ==
      "0x5df9b87991262f6ba471f09758cde1c0fc1de734");
    CHECK(tc.value == 31337);
    CHECK(tc.data == "0x");

    const auto encoded = decoded.encode();
    const auto hash = eevm::keccak_256(encoded);
    CHECK(
      eevm::to_lower_hex_string(hash) ==
      "0x5c504ed432cb51138bcf09aa5e8a410dd4a1e204ef84bfed1be16dfba1b22060");
  }

  {
    INFO("Old value transfer");
    current_chain_id = ChainIDs::ropsten;
    const eevm::rlp::ByteString raw_tx = eevm::to_bytes(
      "0xf869808504a817c800830186a094687422eea2cb73b5d3e242ba5456b782919afc8582"
      "03e882c0de1ca0668ed6500efd75df7cb9c9b9d8152292a75453ec2d11030b0eec42f6a7"
      "ace602a03efcbbf4d53e0dfa4fde5c6d9a73221418652abc66dff7fddd78b81cc28b9fb"
      "f");

    const auto decoded = EthereumTransactionWithSignature(raw_tx);

    rpcparams::MessageCall tc;
    decoded.to_transaction_call(tc);

    CHECK(decoded.nonce == 0);
    CHECK(tc.gas_price == 20 * std::giga::num); // 20 GWei
    CHECK(tc.gas == 100'000);
    CHECK(
      eevm::to_lower_hex_string(tc.from) ==
      "0x53ae893e4b22d707943299a8d0c844df0e3d5557");
    CHECK(
      eevm::to_lower_hex_string(*tc.to) ==
      "0x687422eea2cb73b5d3e242ba5456b782919afc85");
    CHECK(tc.value == 1'000);
    CHECK(tc.data == "0xc0de");

    const auto encoded = decoded.encode();
    const auto hash = eevm::keccak_256(encoded);
    CHECK(
      eevm::to_lower_hex_string(hash) ==
      "0x8b69a0ca303305a92d8d028704d65e4942b7ccc9a99917c8c9e940c9d57a9662");
  }

  {
    INFO("Ropsten contract call");
    current_chain_id = ChainIDs::ropsten;
    const eevm::rlp::ByteString raw_tx = eevm::to_bytes(
      "0xf8aa0b8504a817c8008302174394950041c1599529a9f64cf2be59ffb86072f0011180"
      "b844a9059cbb0000000000000000000000007adee867ea91533879d083dd47ea81f0eee3"
      "a37e000000000000000000000000000000000000000000000000d02ab486cedbffff29a0"
      "af49c251adb2f061db93653adb24f2fd6ef5110b0475a811de25727fca0b6b1aa040799f"
      "e6cda0f6d6e40212cf25f1cf85f3535eaafb7175aaec67ad84eccbb39d");

    const auto decoded = EthereumTransactionWithSignature(raw_tx);

    rpcparams::MessageCall tc;
    decoded.to_transaction_call(tc);

    CHECK(decoded.nonce == 11);
    CHECK(tc.gas_price == 20 * std::giga::num); // 20 GWei
    CHECK(tc.gas == 137'027);
    CHECK(
      eevm::to_lower_hex_string(tc.from) ==
      "0xc44f81ad72c7c0c4bc3bb41976676190c989124d");
    CHECK(
      eevm::to_lower_hex_string(*tc.to) ==
      "0x950041c1599529a9f64cf2be59ffb86072f00111");
    CHECK(tc.value == 0);
    CHECK(
      tc.data ==
      "0xa9059cbb0000000000000000000000007adee867ea91533879d083dd47ea81f0eee3a3"
      "7e000000000000000000000000000000000000000000000000d02ab486cedbffff");

    const auto encoded = decoded.encode();
    const auto hash = eevm::keccak_256(encoded);
    CHECK(
      eevm::to_lower_hex_string(hash) ==
      "0xaf4a217f6cc6f8c79530203372f3fbec160da83d1abe048625a390ba1705dd57");
  }

  {
    INFO("Recent mainnet contract call");
    current_chain_id = ChainIDs::ethereum_mainnet;
    const eevm::rlp::ByteString raw_tx = eevm::to_bytes(
      "0xf8b2822dc68447868c008301d4a99406012c8cf97bead5deae237070f9587f8e7a266d"
      "871c6bf526340000b844f7d8c88300000000000000000000000000000000000000000000"
      "000000000000001985860000000000000000000000000000000000000000000000000000"
      "000000197f2825a0aab21b5211565a5e7cab39304231ecc70d160f0fec3560ac2f8d7a94"
      "b5ffdbb0a05cc681f215126793139f16cbf61dba21cc39280ec38d2eae67f7dd61890b22"
      "14");

    const auto decoded = EthereumTransactionWithSignature(raw_tx);

    rpcparams::MessageCall tc;
    decoded.to_transaction_call(tc);

    CHECK(decoded.nonce == 11718);
    CHECK(tc.gas_price == uint256_t(1.2 * std::giga::num)); // 1.2 Gwei
    CHECK(tc.gas == 119'977);
    CHECK(
      eevm::to_lower_hex_string(tc.from) ==
      "0x41308f0538d32dae052e3524c82f47eae2e560f1");
    CHECK(
      eevm::to_lower_hex_string(*tc.to) ==
      "0x6012c8cf97bead5deae237070f9587f8e7a266d");
    CHECK(tc.value == 8 * std::peta::num); // 8 finney
    CHECK(
      tc.data ==
      "0xf7d8c88300000000000000000000000000000000000000000000000000000000001985"
      "860000000000000000000000000000000000000000000000000000000000197f28");

    const auto encoded = decoded.encode();
    const auto hash = eevm::keccak_256(encoded);
    CHECK(
      eevm::to_lower_hex_string(hash) ==
      "0xf26443eb01205bbbec9ee23a975eb50050d6c25edcd1e6e8503b40b97125deba");
  }

  {
    INFO("Mainnet contract creation");
    current_chain_id = ChainIDs::ethereum_mainnet;
    const eevm::rlp::ByteString raw_tx = eevm::to_bytes(
      "0xf90880038501a13b86008347b7608080b9082d608060405234801561001057600080fd"
      "5b5060405160208061080d83398101604081815291517f6f72672e7a657070656c696e6f"
      "732e70726f78792e696d706c656d656e74617482527f696f6e0000000000000000000000"
      "000000000000000000000000000000000000602083015291519081900360230190208190"
      "6000805160206107ed8339815191521461009157fe5b6100a38164010000000061010481"
      "0204565b50604080517f6f72672e7a657070656c696e6f732e70726f78792e61646d696e"
      "0000000000008152905190819003601a0190206000805160206107cd8339815191521461"
      "00ec57fe5b6100fe336401000000006101c2810204565b506101dc565b600061011c8264"
      "01000000006105ae6101d482021704565b15156101af57604080517f08c379a000000000"
      "000000000000000000000000000000000000000000000000815260206004820152603b60"
      "248201527f43616e6e6f742073657420612070726f787920696d706c656d656e74617469"
      "6f60448201527f6e20746f2061206e6f6e2d636f6e747261637420616464726573730000"
      "000000606482015290519081900360840190fd5b506000805160206107ed833981519152"
      "55565b6000805160206107cd83398151915255565b6000903b1190565b6105e2806101eb"
      "6000396000f30060806040526004361061006c5763ffffffff7c01000000000000000000"
      "000000000000000000000000000000000000006000350416633659cfe681146100765780"
      "634f1ef286146100975780635c60da1b146100b75780638f283970146100e8578063f851"
      "a44014610109575b61007461011e565b005b34801561008257600080fd5b506100746001"
      "60a060020a0360043516610138565b61007460048035600160a060020a03169060248035"
      "908101910135610172565b3480156100c357600080fd5b506100cc6101ea565b60408051"
      "600160a060020a039092168252519081900360200190f35b3480156100f457600080fd5b"
      "50610074600160a060020a0360043516610227565b34801561011557600080fd5b506100"
      "cc610339565b610126610364565b610136610131610411565b610436565b565b61014061"
      "045a565b600160a060020a031633600160a060020a03161415610167576101628161047f"
      "565b61016f565b61016f61011e565b50565b61017a61045a565b600160a060020a031633"
      "600160a060020a031614156101dd5761019c8361047f565b30600160a060020a03163483"
      "836040518083838082843782019150509250505060006040518083038185875af1925050"
      "5015156101d857600080fd5b6101e5565b6101e561011e565b505050565b60006101f461"
      "045a565b600160a060020a031633600160a060020a0316141561021c5761021561041156"
      "5b9050610224565b61022461011e565b90565b61022f61045a565b600160a060020a0316"
      "33600160a060020a0316141561016757600160a060020a03811615156102e55760408051"
      "7f08c379a000000000000000000000000000000000000000000000000000000000815260"
      "206004820152603660248201527f43616e6e6f74206368616e6765207468652061646d69"
      "6e206f6620612070726f60448201527f787920746f20746865207a65726f206164647265"
      "737300000000000000000000606482015290519081900360840190fd5b7f7e644d79422f"
      "17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f61030e61045a565b6040"
      "8051600160a060020a03928316815291841660208301528051918290030190a161016281"
      "6104c7565b600061034361045a565b600160a060020a031633600160a060020a03161415"
      "61021c5761021561045a565b61036c61045a565b600160a060020a031633141561040957"
      "604080517f08c379a0000000000000000000000000000000000000000000000000000000"
      "00815260206004820152603260248201527f43616e6e6f742063616c6c2066616c6c6261"
      "636b2066756e6374696f6e20667260448201527f6f6d207468652070726f78792061646d"
      "696e0000000000000000000000000000606482015290519081900360840190fd5b610136"
      "610136565b7f7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3"
      "f8c35490565b3660008037600080366000845af43d6000803e808015610455573d6000f3"
      "5b3d6000fd5b7f10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1f"
      "f9390b5490565b610488816104eb565b60408051600160a060020a038316815290517fbc"
      "7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b9181900360"
      "200190a150565b7f10d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a"
      "1ff9390b55565b60006104f6826105ae565b151561058957604080517f08c379a0000000"
      "00000000000000000000000000000000000000000000000000815260206004820152603b"
      "60248201527f43616e6e6f742073657420612070726f787920696d706c656d656e746174"
      "696f60448201527f6e20746f2061206e6f6e2d636f6e7472616374206164647265737300"
      "00000000606482015290519081900360840190fd5b507f7050c9e0f4ca769c69bd3a8ef7"
      "40bc37934f8e2c036e5a723fd8ee048ed3f8c355565b6000903b11905600a165627a7a72"
      "305820e6a0e94ea36527366a6a00202c99a28a36e0c44d2d0594a734640045e716967000"
      "2910d6a54a4754c8869d6886b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b7050c9"
      "e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c300000000000000"
      "00000000006ffcb0f00c3ad2575e443152d8861aec1bda9ce61ba0c07cefe95c4248acaf"
      "5692fb27c0d92eace6a505c61c6557f4ad8e9025eee00ca00cbec4b3a441012b5fe2ff8c"
      "32d4fdc2e6f8278a0340db3ee9f0faeabd09c284");

    const auto decoded = EthereumTransactionWithSignature(raw_tx);

    rpcparams::MessageCall tc;
    decoded.to_transaction_call(tc);

    CHECK(decoded.nonce == 3);
    CHECK(tc.gas_price == 7 * std::giga::num); // 7 Gwei
    CHECK(tc.gas == 4'700'000);
    CHECK(
      eevm::to_lower_hex_string(tc.from) ==
      "0x51e15804cf7ff061410193512b499f071ecf9c4b");
    CHECK(!tc.to.has_value());
    CHECK(tc.value == 0);
    CHECK(
      tc.data ==
      "0x608060405234801561001057600080fd5b5060405160208061080d8339810160408181"
      "5291517f6f72672e7a657070656c696e6f732e70726f78792e696d706c656d656e746174"
      "82527f696f6e000000000000000000000000000000000000000000000000000000000060"
      "20830152915190819003602301902081906000805160206107ed83398151915214610091"
      "57fe5b6100a381640100000000610104810204565b50604080517f6f72672e7a65707065"
      "6c696e6f732e70726f78792e61646d696e0000000000008152905190819003601a019020"
      "6000805160206107cd833981519152146100ec57fe5b6100fe336401000000006101c281"
      "0204565b506101dc565b600061011c826401000000006105ae6101d482021704565b1515"
      "6101af57604080517f08c379a00000000000000000000000000000000000000000000000"
      "0000000000815260206004820152603b60248201527f43616e6e6f742073657420612070"
      "726f787920696d706c656d656e746174696f60448201527f6e20746f2061206e6f6e2d63"
      "6f6e747261637420616464726573730000000000606482015290519081900360840190fd"
      "5b506000805160206107ed83398151915255565b6000805160206107cd83398151915255"
      "565b6000903b1190565b6105e2806101eb6000396000f30060806040526004361061006c"
      "5763ffffffff7c0100000000000000000000000000000000000000000000000000000000"
      "6000350416633659cfe681146100765780634f1ef286146100975780635c60da1b146100"
      "b75780638f283970146100e8578063f851a44014610109575b61007461011e565b005b34"
      "801561008257600080fd5b50610074600160a060020a0360043516610138565b61007460"
      "048035600160a060020a03169060248035908101910135610172565b3480156100c35760"
      "0080fd5b506100cc6101ea565b60408051600160a060020a039092168252519081900360"
      "200190f35b3480156100f457600080fd5b50610074600160a060020a0360043516610227"
      "565b34801561011557600080fd5b506100cc610339565b610126610364565b6101366101"
      "31610411565b610436565b565b61014061045a565b600160a060020a031633600160a060"
      "020a03161415610167576101628161047f565b61016f565b61016f61011e565b50565b61"
      "017a61045a565b600160a060020a031633600160a060020a031614156101dd5761019c83"
      "61047f565b30600160a060020a0316348383604051808383808284378201915050925050"
      "5060006040518083038185875af19250505015156101d857600080fd5b6101e5565b6101"
      "e561011e565b505050565b60006101f461045a565b600160a060020a031633600160a060"
      "020a0316141561021c57610215610411565b9050610224565b61022461011e565b90565b"
      "61022f61045a565b600160a060020a031633600160a060020a0316141561016757600160"
      "a060020a03811615156102e557604080517f08c379a00000000000000000000000000000"
      "0000000000000000000000000000815260206004820152603660248201527f43616e6e6f"
      "74206368616e6765207468652061646d696e206f6620612070726f60448201527f787920"
      "746f20746865207a65726f20616464726573730000000000000000000060648201529051"
      "9081900360840190fd5b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae83"
      "2dc59e38c9798f61030e61045a565b60408051600160a060020a03928316815291841660"
      "208301528051918290030190a1610162816104c7565b600061034361045a565b600160a0"
      "60020a031633600160a060020a0316141561021c5761021561045a565b61036c61045a56"
      "5b600160a060020a031633141561040957604080517f08c379a000000000000000000000"
      "000000000000000000000000000000000000815260206004820152603260248201527f43"
      "616e6e6f742063616c6c2066616c6c6261636b2066756e6374696f6e2066726044820152"
      "7f6f6d207468652070726f78792061646d696e0000000000000000000000000000606482"
      "015290519081900360840190fd5b610136610136565b7f7050c9e0f4ca769c69bd3a8ef7"
      "40bc37934f8e2c036e5a723fd8ee048ed3f8c35490565b3660008037600080366000845a"
      "f43d6000803e808015610455573d6000f35b3d6000fd5b7f10d6a54a4754c8869d6886b5"
      "f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b5490565b610488816104eb565b604080"
      "51600160a060020a038316815290517fbc7cd75a20ee27fd9adebab32041f755214dbc6b"
      "ffa90cc0225b39da2e5c2d3b9181900360200190a150565b7f10d6a54a4754c8869d6886"
      "b5f5d7fbfa5b4522237ea5c60d11bc4e7a1ff9390b55565b60006104f6826105ae565b15"
      "1561058957604080517f08c379a000000000000000000000000000000000000000000000"
      "000000000000815260206004820152603b60248201527f43616e6e6f7420736574206120"
      "70726f787920696d706c656d656e746174696f60448201527f6e20746f2061206e6f6e2d"
      "636f6e747261637420616464726573730000000000606482015290519081900360840190"
      "fd5b507f7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3"
      "55565b6000903b11905600a165627a7a72305820e6a0e94ea36527366a6a00202c99a28a"
      "36e0c44d2d0594a734640045e7169670002910d6a54a4754c8869d6886b5f5d7fbfa5b45"
      "22237ea5c60d11bc4e7a1ff9390b7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e"
      "5a723fd8ee048ed3f8c30000000000000000000000006ffcb0f00c3ad2575e443152d886"
      "1aec1bda9ce6");

    const auto encoded = decoded.encode();
    const auto hash = eevm::keccak_256(encoded);
    CHECK(
      eevm::to_lower_hex_string(hash) ==
      "0xb30ac593f18a3ad64361107bca6fdf0b36f4aa4d73c898fbe53e95e2487562a8");
  }
}
